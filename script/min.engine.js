const cdx={local:{},global:{},input:{},object:{},scene:{}};cdx.scene.goto=function(e){runtimeScene.requestChange(gdjs.SceneChangeRequest.REPLACE_SCENE,e)},cdx.local.setvar=function(e,t){runtimeScene.getVariables().get(e).setString(t)},cdx.local.getvar=function(e){return runtimeScene.getVariables().get(e).getAsString()},cdx.global.setvar=function(e,t){runtimeScene.getGame.getVariables().get(e).setString(t)},cdx.global.getvar=function(e){return runtimeScene.getGame.getVariables().get(e).getAsString()},cdx.object.colision=function(e,t){try{const n=runtimeScene.getObjects(e)[0],o=runtimeScene.getObjects(t)[0];return gdjs.RuntimeObject.collisionTest(n,o,!1)}catch(e){return!1}},cdx.object.create=function(e,t,n,o){(c=runtimeScene.createObject(e)).setX(n),c.setY(o);var c=e,r=t,s={load:function(e,t){var n=t[c];runtimeScene.getGame();runtimeScene.getObjects(c)[0].getRendererObject().texture=n.texture}};PIXI.Loader.shared.reset(),PIXI.Loader.shared.add(c,r),PIXI.Loader.shared.load(s.load)},cdx.object.move=function(e,t,n){for(const o of runtimeScene.getObjects(e))o.setPosition(t,n)},cdx.object.permf=function(e,t,n,o){for(const c of runtimeScene.getObjects(e))c.addForce(t,n,o)},cdx.object.del=function(e){for(const t of runtimeScene.getObjects(e))t.deleteFromScene(runtimeScene)},cdx.object.getx=function(e){for(const t of runtimeScene.getObjects(e))return parseInt(t.getX())},cdx.object.gety=function(e){for(const t of runtimeScene.getObjects(e))return parseInt(t.getY())},cdx.input.keycode=function(e){return gdjs.evtTools.input.isKeyPressed(runtimeScene,e)};const p2p={client:{},data:{},connect:{}};p2p.connect.server=function(e,t,n,o,c){0==isNaN(t)&&"boolean"==typeof c&&gdjs.evtTools.p2p.useCustomBrokerServer(e,t,n,o,c)},p2p.client.connect=function(e){gdjs.evtTools.p2p.connect(e)},p2p.client.getid=function(){return gdjs.evtTools.p2p.getCurrentId()},p2p.client.sendall=function(e,t){gdjs.evtTools.p2p.sendDataToAll(e,t)},p2p.client.sendtoid=function(e,t,n){gdjs.evtTools.p2p.sendDataTo(e,t,n)},p2p.client.setid=function(e){gdjs.evtTools.p2p.overrideId(e)},p2p.data.get=function(e){return gdjs.evtTools.p2p.getEventData(e)},p2p.data.geterror=function(e){return gdjs.evtTools.p2p.getLastError()};const http={send:{},load:{}};http.send.request=function(e,t,n=""){let o=new XMLHttpRequest;return o.open(t,e,!1),o.send([n]),o.responseText},http.load.song=function(e,t,n,o){runtimeScene.getGame().getSoundManager().playSoundOnChannel(e,t,!1,n,o)};
// Code Goes Below this line!!!